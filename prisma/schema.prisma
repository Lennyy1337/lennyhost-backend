generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model key {
  key  String   @db.VarChar(256)
  type KeyRoles

  @@unique([key])
  @@index([key])
  @@map("keys") // todo: in the future use an `user_id`
}

model user {
  id String @unique @default(uuid()) @db.VarChar(256)

  username String
  email    String
  password String

  role Role @default(REGULAR)

  uploads upload[]

  // new fields
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  @@unique([id, email, username])
  @@index([id, username, email])
  @@map("users")
}

model upload {
  id      String @unique @default(uuid()) @db.VarChar(256)
  fileKey String

  fileName String
  mimetype String // future todo: rename this to mimeType

  user   user   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: SetDefault)
  userId String

  @@unique([id, fileKey])
  @@index([id, mimetype, fileKey, fileName, userId])
  @@map("uploads")
}

enum KeyRoles {
  STAFF
  PREMIUM

  @@map("key_roles")
}

enum Role {
  OWNER
  STAFF
  PREMIUM
  REGULAR

  @@map("roles")
}
